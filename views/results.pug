extends layout

block content
  .results-page
    .container
      .back-bar
        button.back-btn(onclick="history.back()")
          i.fa-solid.fa-arrow-left
          | Back to Search
        h1.page-title Perfect Destinations for You

      .results-grid
        each destination in destinations
          .destination-card
            .destination-header
              span.flag= destination.flag
              h2.name #{destination.name}, #{destination.country}
              span.match-score #{destination.matchScore}% match

            .weather
              i.fa-solid.fa-sun
              span.weather-text #{destination.weather} — #{destination.temperature}°C

            .currency
              i.fa-solid.fa-dollar-sign
              | #{destination.currency} (1 USD = #{destination.exchangeRate.toFixed(2)} #{destination.currency})

            .map-preview(onclick=`alert("${destination.name} is at ${destination.coordinates.lat.toFixed(2)}, ${destination.coordinates.lng.toFixed(2)}")`)
              i.fa-solid.fa-map-pin
              span= `${destination.coordinates.lat.toFixed(2)}, ${destination.coordinates.lng.toFixed(2)}`

            .budget-chart
              h4(style="font-weight: 400; margin-bottom: 15px; text-align: left;") Budget Breakdown
              div(style="text-align: center;")
                canvas(id=`chart-${destination.id}` width="100" height="100" style="display: block; margin: 0 auto;")


            button.view-details(onclick=`window.location.href='/destination/${destination.id}'`)
              | View Details

  //- Notice the script. block is unindented to align with .results-page
  script.
    console.log("Page script loaded"); // put this here temporarily
    const destinations = !{destinationsJSON};
    
    // Render charts for each destination
    destinations.forEach((destination) => {
      console.log("Rendering chart for:", destination.id);
      const canvas = document.getElementById(`chart-${destination.id}`);
      if (!canvas) {
        console.error(`Canvas for destination ${destination.id} not found`);
        return;
      }
      const ctx = canvas.getContext("2d");

      new Chart(ctx, {
        type: "pie",
        data: {
          labels: destination.budgetBreakdown.map((item) => item.name),
          datasets: [
            {
              data: destination.budgetBreakdown.map((item) => item.value),
              backgroundColor: destination.budgetBreakdown.map(
                (item) => item.color
              ),
            },
          ],
        },
        options: {
          plugins: {
            legend: {
              display: false,
            },
          },
          responsive: false,
          maintainAspectRatio: false,
        },
      });
    });
